// ==UserScript==
// @name         Kopiník
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Automatizace rekrutu kopiníků s náhodnými prodlevami, opakováním při chybě a časovými intervaly.
// @author       Wwwww
// @match        https://*/game.php?*screen=train*
// @grant        none
// @icon         https://help.divokekmeny.cz/images/4/4f/Spear.png
// ==/UserScript==

(function() {
    'use strict';

    const storageKey = 'autoRecruitState'; // Klíč pro uložení do localStorage

    // Výchozí hodnoty proměnných
    const defaultState = {
        recruitButtonState: true,  // Tato proměnná rozhoduje o aktivaci skriptu
        checkbox1: true,  // checkbox1 pro kopiníky
        time1: "05:10"    // Čas mezi rekrutováním kopiníků
    };

    // Funkce pro načítání stavu z localStorage
    function loadState() {
        const storedState = localStorage.getItem(storageKey);
        if (storedState) {
            try {
                const parsedState = JSON.parse(storedState);
                return parsedState;
            } catch (e) {
                return { ...defaultState }; // Pokud je chyba, vrať výchozí hodnoty
            }
        }
        return { ...defaultState }; // Pokud není nic uloženo, použij výchozí hodnoty
    }

    // Funkce pro ukládání stavu do localStorage
    function saveState(state) {
        localStorage.setItem(storageKey, JSON.stringify(state));
    }

    // Funkce pro převod času na milisekundy
    function convertTimeToMs(timeStr) {
        const parts = timeStr.split(':');
        const minutes = parseInt(parts[0], 10);
        const seconds = parseInt(parts[1], 10);
        return (minutes * 60 * 1000) + (seconds * 1000);
    }

    // Funkce pro randomizaci prodlevy mezi dvěma hodnotami
    function randomizeTime(baseTimeMs, minOffsetMs) {
        const randomMs = Math.random() * (baseTimeMs - minOffsetMs);
        return baseTimeMs - randomMs;
    }

    // Funkce pro náhodné čekání (v milisekundách)
    function waitRandomMs(maxMs, callback) {
        const delay = Math.random() * maxMs;
        setTimeout(callback, delay);
    }

    // Funkce pro čekání 0-1 sekund na začátku skriptu
    function waitStartDelay(callback) {
        const delay = Math.random() * 1000; // 0-1 vteřina
        setTimeout(callback, delay);
    }

    // Funkce pro kontrolu a úpravu času (aby nebyl nižší než time - 30 sekund)
    function adjustTime(timeStr) {
        const baseTimeMs = convertTimeToMs(timeStr);
        const minTimeMs = baseTimeMs - 30000; // Minimální čas = čas - 30 sekund
        return randomizeTime(baseTimeMs, minTimeMs); // Randomizace s minimem
    }

    // Hlavní funkce pro automatizaci
    function automateRecruiting() {
        const state = loadState();

        // Pokud je rekrutování vypnuto, celý skript se zastaví
        if (!state.recruitButtonState) {
            return;
        }

        if (!state.checkbox1) {
            return; // Pokud není zaškrtnutý checkbox1, skript nic neudělá
        }

        // Zkontroluj přítomnost pole pro kopiníky (spear)
        let inputField = document.getElementById('spear_0');
        if (!inputField) {
            restartAfterDelay();
            return;
        }

        // Nastavení hodnoty pro kopiníky
        inputField.value = '1'; // Nastaví počet kopiníků na 1

        // Zkontroluj přítomnost tlačítka pro rekrutování
        let recruitButton = document.querySelector('.btn.btn-recruit');
        if (!recruitButton) {
            restartAfterDelay();
            return;
        }

        // Náhodná prodleva před kliknutím na tlačítko
        waitRandomMs(500, () => {
            recruitButton.click();
        });

        // Čekání podle upraveného času
        const adjustedTimeMs = adjustTime(state.time1); // Upravený čas
        setTimeout(automateRecruiting, adjustedTimeMs);
    }

    // Funkce pro restart skriptu po náhodné prodlevě (30-50 sekund)
    function restartAfterDelay() {
        const delay = 30000 + Math.random() * 20000; // 30 až 50 sekund
        setTimeout(automateRecruiting, delay);
    }

    // Načtení stavu a spuštění skriptu s prodlevou na začátku
    waitStartDelay(function() {
        waitRandomMs(1000, automateRecruiting);
    });

})();
