// ==UserScript==
// @name         Lučišník
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Automatizace rekrutu lukostřelců s náhodnými prodlevami, opakováním při chybě a časovými intervaly.
// @author       Wwwww
// @match        https://*/game.php?*screen=train*
// @grant        none
// @icon         https://help.divokekmeny.cz/images/2/29/Archer.png
// ==/UserScript==

(function() {
    'use strict';

    const storageKey = 'autoRecruitState'; // Klíč pro uložení do localStorage

    // Výchozí hodnoty proměnných
    const defaultState = {
        recruitButtonState: true,  // Tato proměnná rozhoduje o aktivaci skriptu
        checkbox4: true,  // checkbox4 pro lukostřelce
        time4: "06:20"    // Čas mezi rekrutováním lukostřelců
    };

    // Funkce pro načítání stavu z localStorage
    function loadState() {
        const storedState = localStorage.getItem(storageKey);
        if (storedState) {
            try {
                const parsedState = JSON.parse(storedState);
                return parsedState;
            } catch (e) {
                return { ...defaultState }; // Pokud je chyba, vrať výchozí hodnoty
            }
        }
        return { ...defaultState }; // Pokud není nic uloženo, použij výchozí hodnoty
    }

    // Funkce pro ukládání stavu do localStorage
    function saveState(state) {
        localStorage.setItem(storageKey, JSON.stringify(state));
    }

    // Funkce pro převod času na milisekundy
    function convertTimeToMs(timeStr) {
        const parts = timeStr.split(':'); // Rozdělení času na minuty a sekundy
        const minutes = parseInt(parts[0], 10); // Minuty
        const seconds = parseInt(parts[1], 10); // Sekundy
        const milliseconds = (minutes * 60 * 1000) + (seconds * 1000); // Převod na ms
        return milliseconds;
    }

    // Funkce pro randomizaci prodlevy mezi dvěma časy v milisekundách
    function randomizeTime(minTimeMs, maxTimeMs) {
        const randomMs = Math.random() * (maxTimeMs - minTimeMs) + minTimeMs; // Generuje náhodnou hodnotu mezi minTimeMs a maxTimeMs
        return randomMs;
    }

    // Funkce pro čekání 0-1 sekund na začátku skriptu
    function waitStartDelay(callback) {
        const delay = Math.random() * 1000; // 0-1 vteřina
        setTimeout(callback, delay);
    }

    // Hlavní funkce pro automatizaci
    function automateRecruiting() {
        // Načti aktuální stav
        const state = loadState();

        // Pokud je rekrutování vypnuto, celý skript se zastaví
        if (!state.recruitButtonState) {
            return; // Skript se zastaví
        }

        if (!state.checkbox4) {
            return; // Pokud není zaškrtnutý checkbox4, skript nic neudělá
        }

        // Zkontroluj přítomnost pole pro lukostřelce (archer)
        let inputField = document.getElementById('archer_0');
        if (!inputField) {
            restartAfterDelay();
            return;
        }

        // Nastavení hodnoty pro lukostřelce
        inputField.value = '1'; // Nastaví počet lukostřelců na 1

        // Zkontroluj přítomnost tlačítka pro rekrutování
        let recruitButton = document.querySelector('.btn.btn-recruit');
        if (!recruitButton) {
            restartAfterDelay();
            return;
        }

        // Náhodná prodleva před kliknutím na tlačítko
        waitRandomMs(500, () => {
            recruitButton.click();
        });

        // Získání časové hodnoty z proměnné `time4` a převod na milisekundy
        const baseTimeMs = convertTimeToMs(state.time4); // Základní čas
        const minTimeMs = baseTimeMs - 30000; // Minimální čas (time4 - 30 sekund)

        // Randomizace čekání mezi time4 a time4 - 30s
        const randomizedTimeMs = randomizeTime(minTimeMs, baseTimeMs);

        // Čekání a opětovné spuštění funkce pro rekrutování
        setTimeout(automateRecruiting, randomizedTimeMs);
    }

    // Funkce pro restart skriptu po náhodné prodlevě (30-50 sekund)
    function restartAfterDelay() {
        const delay = 30000 + Math.random() * 20000; // 30 až 50 sekund
        setTimeout(automateRecruiting, delay);
    }

    // Načtení stavu a spuštění skriptu s prodlevou na začátku
    waitStartDelay(automateRecruiting);

})();
